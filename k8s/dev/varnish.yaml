apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    name: varnish
    namespace: tfwiki-dev
  spec:
    externalTrafficPolicy: Cluster
    ports:
    - name: varnish
      port: 80
      protocol: TCP
      targetPort: varnish
    selector:
      app: varnish
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    name: all-varnish
    namespace: tfwiki-dev
  spec:
    clusterIP: None
    ports:
    - name: varnish
      port: 80
      protocol: TCP
      targetPort: varnish
    selector:
      app: varnish
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    creationTimestamp: null
    labels:
      app: varnish
    name: varnish
    namespace: tfwiki-dev
  spec:
    progressDeadlineSeconds: 2147483647
    replicas: 1
    revisionHistoryLimit: 2147483647
    selector:
      matchLabels:
        app: varnish
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: varnish
        name: varnish
      spec:
        containers:
        - env:
          - name: BACKEND_HOST
            value: mediawiki
          image: tfwiki/varnish:test-rm-48h
          imagePullPolicy: IfNotPresent
          name: varnish
          ports:
          - containerPort: 80
            name: varnish
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /wiki/Main_Page
              port: 80
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status: {}
kind: List
metadata: {}
