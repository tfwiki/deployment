apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app: cloudsql-proxy
    name: cloudsql-proxy
    namespace: tfwiki-dev
  spec:
    externalTrafficPolicy: Cluster
    ports:
    - name: cloudsql-proxy
      port: 3306
      protocol: TCP
      targetPort: cloudsql-proxy
    selector:
      app: cloudsql-proxy
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    creationTimestamp: null
    labels:
      app: cloudsql-proxy
    name: cloudsql-proxy
    namespace: tfwiki-dev
  spec:
    progressDeadlineSeconds: 2147483647
    replicas: 1
    revisionHistoryLimit: 2147483647
    selector:
      matchLabels:
        app: cloudsql-proxy
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: cloudsql-proxy
      spec:
        containers:
        - command:
          - /cloud_sql_proxy
          - --dir=/cloudsql
          - -instances=tfwiki-182108:us-central1:tfwiki-development=tcp:0.0.0.0:3306
          - -credential_file=/secrets/cloudsql/credentials.json
          image: gcr.io/cloudsql-docker/gce-proxy:1.11
          imagePullPolicy: IfNotPresent
          name: cloudsql-proxy
          ports:
          - containerPort: 3306
            name: cloudsql-proxy
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /secrets/cloudsql
            name: cloudsql-instance-credentials
            readOnly: true
          - mountPath: /etc/ssl/certs
            name: ssl-certs
          - mountPath: /cloudsql
            name: cloudsql
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: cloudsql-instance-credentials
          secret:
            defaultMode: 420
            secretName: cloudsql-instance-credentials
        - hostPath:
            path: /etc/ssl/certs
            type: ""
          name: ssl-certs
        - emptyDir: {}
          name: cloudsql
  status: {}
kind: List
metadata: {}
